HCanAWR.controllers.SettingsController = Ext.extend(Ext.Controller, {
	view: null,
	store: null,
	
	init: function(callback) {
		var that = this;
		
		HCanAWR.mon(HCanAWR, 'ShowSettingsView', this.showSettingsView, this);
		
		this.view = new HCanAWR.views.SettingsView();
		this.view.init(function() {
			that.view.languageSelect.mon(
				that.view.languageSelect,
				'change',
				that.viewHandlers.selectLanguage,
				that
			);
			
			Ext.each((new Array()).concat([HCanAWR.conf.ALLCATEGORIES],HCanAWR.itemCategories), function(name) {
				var cmp = that.view.down('#settingsToggle'+window.utils.ucfirst(name));
				cmp.mon( cmp, 'change', that.viewHandlers.toggleNotification, that );
			});
			
			callback(that.view);
		});
	},
	
	showSettingsView: function() {
		this.view.show();
		HCanAWR.fireEvent('ShowView', 'Settings');
	},
	
	viewHandlers: {
		selectLanguage: function(selector, value) {
			HCanAWR.saveLanguage(value);
			HCanAWR.restart(true);
		},
		toggleNotification: function(slider, thumb, newValue, oldValue) {
			var that = this,
				key = slider.id.replace(/^settingsToggle(.+)$/, "$1").toLowerCase() + 'Notifications';
			
			if (key == 'allNotifications') {
				this.view.displayCategories(!newValue);
			} 
			
			HCanAWR.appSettings.set(key, !(!newValue)); // boolify newValue ourselves.
			HCanAWR.appSettings.save();
			
			HCanAWR.fireEvent('SettingsChanged');
		}
	},
	
	destroy: function() {
		this.view.destroy();
	}
	
});
